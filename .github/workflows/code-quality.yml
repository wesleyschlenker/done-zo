name: Code Quality
run-name: Test, Lint, and Check Formatting on PR ${{ github.event.pull_request.number }}
on: [pull_request]

permissions:
  contents: read
  pull-requests: read
  actions: read
  checks: write # Needed for test results
  statuses: write # Needed for Codecov status updates

jobs:
  test-lint-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed to get the full commit history for commitlint

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Cache Deno dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/deno
            ~/.deno
          key: ${{ runner.os }}-deno-${{ hashFiles('**/deno.json') }}
          restore-keys: |
            ${{ runner.os }}-deno-

      - name: Check formatting
        run: deno fmt --check .

      - name: Run linting
        run: deno lint

      - name: Check commit messages
        run: deno run -A npm:@commitlint/cli --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

      - name: Run tests
        run: deno test --coverage=coverage

      - name: Generate coverage report
        run: deno coverage ./coverage --lcov > coverage.lcov
        # Continue on error until we actually have test covered files
        continue-on-error: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.lcov
